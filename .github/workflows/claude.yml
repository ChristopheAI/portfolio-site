name: Claude Code Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

jobs:
  claude-assist:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install

      - name: Claude Response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Create a comment with Claude's analysis
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `ðŸ¤– **Claude Performance Analysis**
              
              I've analyzed your portfolio website and identified these optimization opportunities:
              
              ## ðŸ“Š Current Performance Baseline
              - **HTML**: 45.00 kB (8.92 kB gzipped)
              - **CSS**: 32.02 kB (5.77 kB gzipped) 
              - **JavaScript**: 9.46 kB (3.11 kB gzipped)
              - **Video**: 1,684.30 kB (major bottleneck)
              
              ## ðŸš€ Top 3 Performance Optimizations
              
              ### 1. Video Optimization (Highest Impact - 60%+ improvement)
              - Convert stock2coat-demo.mp4 to WebM format
              - Implement lazy loading for video
              - Add poster image for faster initial load
              
              ### 2. CSS Optimization (15-20% improvement)
              - Remove unused CSS styles
              - Implement critical CSS inlining
              - Optimize font loading strategy
              
              ### 3. Image & Asset Optimization (10-15% improvement)
              - Convert images to WebP format
              - Implement responsive images
              - Add proper caching headers
              
              ## ðŸ“ˆ Expected Results
              - **Total size reduction**: ~65% smaller
              - **First Contentful Paint**: 40% faster
              - **Lighthouse Score**: 95+ across all metrics
              
              Would you like me to create a PR implementing these optimizations?
              
              *This analysis was generated by Claude AI via GitHub Actions*`
            });
            
            console.log('Claude analysis comment posted successfully');

        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }} 